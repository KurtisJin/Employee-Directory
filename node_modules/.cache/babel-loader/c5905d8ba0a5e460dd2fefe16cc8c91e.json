{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurti\\\\Desktop\\\\React\\\\reactapplication\\\\src\\\\components\\\\EmployeeTable\\\\EmployeeTable.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"../EmployeeCard/EmployeeCard\";\nimport Navbar from \"../Navbar/Navbar\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      aToz: true,\n      ascending: true,\n      employeeListing: []\n    };\n\n    this.sortByName = () => {\n      let sort = [];\n      console.log(this.state.employeeListing);\n\n      if (this.state.ascending) {\n        sort = this.state.employeeListing.sort((a, b) => {\n          let alphaA = a.name.last.toLowerCase();\n          let alphaB = b.name.last.toLowerCase();\n\n          if (alphaA < alphaB) {\n            return -1;\n          } else if (alphaA > alphaB) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        this.setState({\n          ascending: false\n        });\n      } else {\n        sort = this.state.employeeListing.sort((a, b) => {\n          let alphaA = a.name.last.toLowerCase();\n          let alphaB = b.name.last.toLowerCase();\n\n          if (alphaA < alphaB) {\n            return 1;\n          } else if (alphaA > alphaB) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n        this.setState({\n          ascending: true\n        });\n      }\n    };\n\n    this.sortByAge = () => {\n      let sort = [];\n      console.log(this.state.employeeListing);\n\n      if (this.state.ascending) {\n        sort = this.state.employeeListing.sort((a, b) => {\n          let alphaA = a.dob.age;\n          let alphaB = b.dob.age;\n\n          if (alphaA < alphaB) {\n            return -1;\n          } else if (alphaA > alphaB) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        this.setState({\n          ascending: false\n        });\n      } else {\n        sort = this.state.employeeListing.sort((a, b) => {\n          let alphaA = a.dob.age;\n          let alphaB = bdob.age;\n\n          if (alphaA < alphaB) {\n            return 1;\n          } else if (alphaA > alphaB) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n        this.setState({\n          ascending: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    API.randomUser().then(res => {\n      console.log(res.data.results);\n      this.setState({\n        employeeListing: res.data.results\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              onClick: this.sortByName,\n              className: \"name\",\n              children: \"Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.employeeListing.length > 0 && this.state.employeeListing.map((item, index) => /*#__PURE__*/_jsxDEV(EmployeeCard, {\n            image: item.picture.medium,\n            first: item.name.first,\n            last: item.name.last,\n            title: item.name.title,\n            gender: item.gender,\n            age: item.dob.age,\n            phone: item.cell,\n            email: item.email\n          }, item.email, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EmployeeTable;","map":{"version":3,"sources":["C:/Users/kurti/Desktop/React/reactapplication/src/components/EmployeeTable/EmployeeTable.js"],"names":["React","Component","EmployeeCard","Navbar","API","EmployeeTable","state","aToz","ascending","employeeListing","sortByName","sort","console","log","a","b","alphaA","name","last","toLowerCase","alphaB","setState","sortByAge","dob","age","bdob","componentDidMount","randomUser","then","res","data","results","catch","err","render","length","map","item","index","picture","medium","first","title","gender","cell","email"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport EmployeeCard from \"../EmployeeCard/EmployeeCard\"\r\nimport Navbar from \"../Navbar/Navbar\"\r\nimport API from \"../utils/API\"\r\n\r\nclass EmployeeTable extends Component {\r\n\r\n    state = {\r\n        aToz: true,\r\n        ascending: true,\r\n        employeeListing: [],\r\n       \r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        API.randomUser().then(res => {\r\n            console.log(res.data.results)\r\n            this.setState(\r\n                   { employeeListing : res.data.results}\r\n\r\n            )\r\n        })\r\n        .catch(err => console.log(err));\r\n        }\r\n    \r\n\r\n\r\n    sortByName = () => {\r\n        let sort = [];\r\n        console.log(this.state.employeeListing)\r\n        if(this.state.ascending){\r\n        sort = this.state.employeeListing.sort((a, b) => {\r\n            let alphaA = a.name.last.toLowerCase();\r\n            let alphaB = b.name.last.toLowerCase();\r\n            if(alphaA < alphaB) {\r\n                return -1\r\n            } else if (alphaA > alphaB) {\r\n                return 1 \r\n            }else {\r\n                return 0;\r\n            }\r\n            \r\n         }); \r\n         \r\n         this.setState({\r\n             ascending:false\r\n         })\r\n        }\r\n        else{\r\n            sort = this.state.employeeListing.sort((a, b) => {\r\n                let alphaA = a.name.last.toLowerCase();\r\n                let alphaB = b.name.last.toLowerCase();\r\n                if(alphaA < alphaB) {\r\n                    return 1\r\n                } else if (alphaA > alphaB) {\r\n                    return -1\r\n                }else {\r\n                    return 0;\r\n                }\r\n                \r\n             }); \r\n            this.setState({\r\n                ascending:true\r\n            })\r\n        }\r\n    }\r\n\r\n    sortByAge = () => {\r\n        let sort = [];\r\n        console.log(this.state.employeeListing)\r\n        if(this.state.ascending){\r\n        sort = this.state.employeeListing.sort((a, b) => {\r\n            let alphaA = a.dob.age;\r\n            let alphaB = b.dob.age;\r\n            if(alphaA < alphaB) {\r\n                return -1\r\n            } else if (alphaA > alphaB) {\r\n                return 1 \r\n            }else {\r\n                return 0;\r\n            }\r\n            \r\n         }); \r\n         \r\n         this.setState({\r\n             ascending:false\r\n         })\r\n        }\r\n        else{\r\n            sort = this.state.employeeListing.sort((a, b) => {\r\n                let alphaA = a.dob.age;\r\n                let alphaB = bdob.age;\r\n                if(alphaA < alphaB) {\r\n                    return 1\r\n                } else if (alphaA > alphaB) {\r\n                    return -1\r\n                }else {\r\n                    return 0;\r\n                }\r\n                \r\n             }); \r\n            this.setState({\r\n                ascending:true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navbar />\r\n            <table className=\"table\">\r\n                <thead>\r\n            <tr>\r\n                    <th scope=\"col\">Photo</th>\r\n                    <th scope=\"col\"onClick={this.sortByName} className=\"name\">Name </th>\r\n                    <th scope=\"col\">Age</th>\r\n                    <th scope=\"col\">Phone</th>\r\n                    <th scope=\"col\">E-mail</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.employeeListing.length > 0 &&\r\n                    this.state.employeeListing.map((item, index) => (\r\n\r\n                            <EmployeeCard\r\n                                image={item.picture.medium}\r\n                                first={item.name.first}\r\n                                last={item.name.last}\r\n                                title={item.name.title}\r\n                                gender={item.gender}\r\n                                age={item.dob.age}\r\n                                phone={item.cell}\r\n                                email={item.email}\r\n                                key={item.email}\r\n                            />\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default EmployeeTable\r\n\r\n"]},"metadata":{},"sourceType":"module"}